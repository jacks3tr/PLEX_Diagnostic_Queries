-- PLACE THE FOLLOWING IN PARAMETERS (Populate filters as Neccessary)--
@PCN INT,
@Begin_Date DATETIME = NULL,
@End_Date DATETIME = NULL,
@Part_No VARCHAR (50) = NULL,
@Building_Key INT = NULL,
@Incl_Jobs BIT = 0,
@BOM_or_Routing SMALLINT = 0,
/*
0 = all records
1 = BOM only
2 = Routing only
*/
@Planning_Group_Key_List VARCHAR (MAX) = NULL,
@Product_Type VARCHAR (50) = NULL,
@Part_Type VARCHAR (50) = NULL


--Paste query below--

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
Set @PCN = PARSENAME(SUSER_NAME(),2)

Declare @Planning_Groups TABLE
(PCN INT NOT NULL, Planning_Group_Key INT NOT NULL);

If @Planning_Group_Key_List IS NOT NULL
BEGIN
Insert @Planning_Groups
(PCN, Planning_Group_Key)
Select
  @PCN, C.Element
From common_udf_f_list_split(@Planning_Group_Key_List,',') AS C;
END;


CREATE TABLE #Revisions
(
  PCN INT NOT NULL,
  Module VARCHAR (50),
  Part_Key INT,
  Part_No VARCHAR (100),
  Revision VARCHAR (10),
  Planner VARCHAR (100),
  Created_Date DATETIME,
  Created_By VARCHAR (100),
  CB_Position VARCHAR (50),
  CB_Department VARCHAR (60),
  Operation_No INT,
  Operation_Code VARCHAR (50),
  Revision_Date DATETIME,
  Revised_By VARCHAR (100),
  RB_Position VARCHAR (50),
  RB_Department VARCHAR (60),
  Original_Text VARCHAR (MAX),
  Revision_Text VARCHAR (MAX),
  Change VARCHAR (MAX)
);
BEGIN
Insert #Revisions
(
  PCN,
  Module,
  Part_Key,
  Part_No,
  Revision,
  Planner,
  Created_Date,
  Created_By,
  CB_Position,
  CB_Department,
  Operation_No,
  Operation_Code,
  Revision_Date,
  Revised_By,
  RB_Position,
  RB_Department,
  Original_Text,
  Revision_Text,
  Change
)
Select
  MR.PCN,
  M.Name AS Module,
  P.Part_Key,
  P.Part_No,
  P.Revision,
  PLN.First_Name + ' ' + PLN.Last_Name AS Planner,
  P.Created_Date,
  CB.First_Name + ' ' + CB.Last_Name AS Created_By,
  CBP.Position AS CB_Position,
  CBD.Department_Code AS CB_Department,
  POP.Operation_No,
  OP.Operation_Code,
  MR.Revision_Date,
  RB.First_Name + ' ' + RB.Last_Name AS Revised_By,
  RBP.Position AS RB_Position,
  RBD.Department_Code AS RB_Department,
  MR.Original_Text,
  MR.Revision_Text,
  IIF(CHARINDEX('Supplier',MR.Revision_Text) !=0, 'Suppliers ', '') +
    IIF(CHARINDEX('Operation',MR.Revision_Text) != 0, 'Operations ', '') +
    IIF(CHARINDEX('Workcenter',MR.Revision_Text) != 0, 'Workcenters ', '') +
    IIF(CHARINDEX('Active',MR.Revision_Text) != 0, 'Op-Active ', '') +
    IIF(CHARINDEX('Record Added',MR.Revision_Text) != 0, 'Record Added', '') AS Change
/*  
  CASE
    WHEN MR.Revision_Text LIKE '<b>Operation%' THEN 'Operation'
    WHEN MR.Revision_Text LIKE '<b>Supplier%' THEN 'Approved Suppliers'
    WHEN MR.Revision_Text LIKE '<b>Workcenter%' THEN 'Approved Workcenters'
    WHEN MR.Revision_Text LIKE '<b>Active%' THEN 'Active Status'
    WHEN MR.Revision_Text LIKE 'Record Added%' THEN 'Record Added'
    ELSE 'Other'
  END AS Change
*/
From Plexus_Control_v_Module_Revision AS MR
Join Plexus_Control_v_Module AS M
  ON M.Module_Key = MR.Module_Key
Join Plexus_Control_v_Plexus_User AS RB
  ON RB.Plexus_User_No = MR.Revision_By
Join Part_v_Part_Operation AS POP
  ON POP.Part_Operation_Key = MR.Identity_Key
Join Part_v_Operation AS OP
  ON OP.Operation_Key = POP.Operation_Key
Join Part_v_Part AS P
  ON P.Part_Key = POP.Part_Key
Left Outer Join Plexus_Control_v_Plexus_User AS CB
  ON CB.Plexus_User_No = P.Created_By
Left Outer Join Common_v_Department AS RBD
  ON RBD.Department_No = RB.Department_No
Left Outer Join Common_v_Position AS RBP
  ON RBP.Position_Key = RB.Position_Key
Left Outer Join Common_v_Department AS CBD
  ON CBD.Department_No = CB.Department_No
Left Outer Join Common_v_Position AS CBP
  ON CBP.Position_Key = CB.Position_Key
Left Outer Join Plexus_Control_v_Plexus_User AS PLN
  ON PLN.Plexus_User_No = P.Planner

Where MR.PCN = @PCN
  AND MR.Revision_Date >= @Begin_Date
  AND MR.Revision_Date <= DATEADD(DD,1,@End_Date)
  AND MR.Module_Key = 109 AND MR.Application_Key = 257820
  AND (@Building_Key IS NULL OR P.Building_Key = @Building_Key)
END;

BEGIN
Insert #Revisions
(
  PCN,
  Module,
  Part_Key,
  Part_No,
  Revision,
  Planner,
  Created_Date,
  Created_By,
  CB_Position,
  CB_Department,
  Operation_No,
  Operation_Code,
  Revision_Date,
  Revised_By,
  RB_Position,
  RB_Department,
  Original_Text,
  Revision_Text,
  Change
)
Select
  MR.PCN,
  M.Name AS Module,
  P.Part_Key,
  P.Part_No,
  P.Revision,
  PLN.First_Name + ' ' + PLN.Last_Name AS Planner,
  P.Created_Date,
  CB.First_Name + ' ' + CB.Last_Name AS Created_By,
  CBP.Position AS CB_Position,
  CBD.Department_Code AS CB_Department,
  POP.Operation_No,
  OP.Operation_Code,
  MR.Revision_Date,
  RB.First_Name + ' ' + RB.Last_Name AS Revised_By,
  RBP.Position AS RB_Position,
  RBD.Department_Code AS RB_Department,
  MR.Original_Text,
  MR.Revision_Text,
  IIF(CHARINDEX('Quantity',MR.Revision_Text) !=0, 'Quantity ', '') +
    IIF(CHARINDEX('Operation',MR.Revision_Text) != 0, 'Part Op ', '') +
    IIF(CHARINDEX('Component',MR.Revision_Text) != 0, 'Component Part ', '') +
    IIF(CHARINDEX('Active',MR.Revision_Text) != 0, 'BOM-Active ', '') +
    IIF(CHARINDEX('Record Added',MR.Revision_Text) != 0, 'Record Added', '') AS Change
/*  
  CASE
    WHEN MR.Revision_Text LIKE 'Standard Quantity%' THEN 'Quantity'
    WHEN MR.Revision_Text LIKE 'Part Operation%' THEN 'Part Op'
    WHEN MR.Revision_Text LIKE 'Active%' THEN 'Active Status'
    WHEN MR.Revision_Text LIKE 'Component Part%' THEN 'Component Part'
    WHEN MR.Revision_Text LIKE 'Record Added%' THEN 'New Record'
    ELSE 'Other'
  END AS Change
*/
From Plexus_Control_v_Module_Revision AS MR
Join Plexus_Control_v_Module AS M
  ON M.Module_Key = MR.Module_Key
Join Plexus_Control_v_Plexus_User AS RB
  ON RB.Plexus_User_No = MR.Revision_By
Join Part_v_BOM AS BOM
  ON BOM.BOM_Key = MR.Identity_Key
Join Part_v_Part_Operation AS POP
  ON POP.Part_Operation_Key = BOM.Part_Operation_Key
Join Part_v_Operation AS OP
  ON OP.Operation_Key = POP.Operation_Key
Join Part_v_Part AS P
  ON P.Part_Key = POP.Part_Key
Left Outer Join Plexus_Control_v_Plexus_User AS CB
  ON CB.Plexus_User_No = P.Created_By
Left Outer Join Common_v_Department AS RBD
  ON RBD.Department_No = RB.Department_No
Left Outer Join Common_v_Position AS RBP
  ON RBP.Position_Key = RB.Position_Key
Left Outer Join Common_v_Department AS CBD
  ON CBD.Department_No = CB.Department_No
Left Outer Join Common_v_Position AS CBP
  ON CBP.Position_Key = CB.Position_Key
Left Outer Join Plexus_Control_v_Plexus_User AS PLN
  ON PLN.Plexus_User_No = P.Planner

Where MR.PCN = @PCN
  AND MR.Revision_Date >= @Begin_Date
  AND MR.Revision_Date <= DATEADD(DD,1,@End_Date)
  AND MR.Module_Key = 34 AND MR.Application_Key = 66
  AND (@Building_Key IS NULL OR P.Building_Key = @Building_Key)
END;

IF @BOM_or_Routing = 1
BEGIN
Delete #Revisions
  Where Module LIKE 'Process Routings'
END;

IF @BOM_or_Routing = 2
BEGIN
Delete #Revisions
  Where Module LIKE 'Bill of Materials'
END;

Select 
  REV.*,
  DATEDIFF(DD,REV.Revision_Date,REV.Created_Date) AS Days_Diff,
  DATEDIFF(HH,DATEADD(DD,DATEDIFF(DD,REV.Revision_Date,REV.Created_Date),REV.Revision_Date),REV.Created_Date) AS Hrs_Diff,
  CASE
    WHEN REV.Created_By = REV.Revised_By THEN 0
    ELSE 1
  END AS User_Change,
  JX.Job_No,
  JX.Due_Date,
  JX.Job_Status,
  P.Part_Status,
  P.Part_Type,
  PG.Part_Group,
  PT.Product_Type,
  GRP.Group_Name AS Planning_Group
From #Revisions AS REV
Join Part_v_Part AS P
  ON P.Part_Key = REV.Part_Key
Left Outer Join Part_v_Part_Group AS PG
  ON PG.Part_Group_Key = P.Part_Group_Key
Left Outer Join Part_v_Part_Product_Type AS PT
  ON PT.Product_Type_Key = P.Product_Type_Key
Join Part_v_Part_Status AS PS
  ON PS.Part_Status = P.Part_Status
Left Outer Join Part_v_Part_Planning_Parameters AS PPP
  ON PPP.Part_Key = REV.Part_Key
Left Outer Join Communication_v_Group_Table AS GRP
  ON GRP.Group_Key = PPP.Planning_Group_Key
Left Outer Join @Planning_Groups AS PGR
  ON PGR.Planning_Group_Key = PPP.Planning_Group_Key

Outer Apply
(
  Select Top (1)
    J.Job_No,
    J.Due_Date,
    JS.Job_Status
  From Part_v_Job AS J
  Join Part_v_Job_Status AS JS
    ON JS.Job_Status_Key = J.Job_Status_Key
  
  Where J.Part_Key = REV.Part_Key
    AND JS.Active = 1
  
  Order By J.Due_Date ASC
) AS JX

Where REV.PCN = @PCN
  AND (REV.Created_By != REV.Revised_By 
    OR REV.Created_By IS NULL
    OR (REV.Created_By = REV.Revised_By AND DATEDIFF(DD,REV.Revision_Date,REV.Created_Date) < 0))
  AND ((@Incl_Jobs = 1 AND JX.Job_No IS NOT NULL) OR @Incl_Jobs = 0)
  AND (@Part_No IS NULL OR REV.Part_No LIKE @Part_No + '%')
  AND (@Planning_Group_Key_List IS NULL OR GRP.Group_Key = PGR.Planning_Group_Key)
  AND (@Product_Type IS NULL OR PT.Product_Type LIKE '%' + @Product_Type + '%')
  AND (@Part_Type IS NULL OR P.Part_Type LIKE '%' + @Part_Type + '%')

Order By REV.Part_No, REV.Revision_Date



Drop Table #Revisions
